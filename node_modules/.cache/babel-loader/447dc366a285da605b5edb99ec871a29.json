{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _toConsumableArray from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import{Button}from\"react-bootstrap\";import\"./QuizExpanded.css\";import{QuizQuestion}from\"./QuizQuestion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var QuizExpanded=function QuizExpanded(_ref){var quiz=_ref.quiz,editQuiz=_ref.editQuiz,resetView=_ref.resetView,switchEdit=_ref.switchEdit;var filteredQuestions=quiz.questionList.filter(function(q){return quiz.published&&q.published||!quiz.published;});var _useState=useState(0),_useState2=_slicedToArray(_useState,2),p=_useState2[0],sp=_useState2[1];var _useState3=useState(new Array(filteredQuestions.length)),_useState4=_slicedToArray(_useState3,2),submitArr=_useState4[0],setSubmitArr=_useState4[1];var handleQuestionSubmit=function handleQuestionSubmit(index){var newSubmitArr=_toConsumableArray(submitArr);newSubmitArr.splice(index,3,true);setSubmitArr(newSubmitArr);};var totalPoints=filteredQuestions.reduce(function(prev,q){return prev+q.points;},0);var addPoints=function addPoints(p){sp(function(prevCount){return prevCount+p;});};var reset=function reset(){setSubmitArr(new Array(filteredQuestions.length));editQuiz(quiz.id,_objectSpread(_objectSpread({},quiz),{},{questionList:quiz.questionList.map(function(q){return _objectSpread(_objectSpread({},q),{},{submission:\"\"});})}));sp(0);};var editQuestionSub=function editQuestionSub(questionId,sub){editQuiz(quiz.id,_objectSpread(_objectSpread({},quiz),{},{questionList:quiz.questionList.map(function(question){return question.id===questionId?_objectSpread(_objectSpread({},question),{},{submission:sub}):question;})}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-baseline\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:quiz.title}),/*#__PURE__*/_jsxs(\"p\",{children:[filteredQuestions.length,\" question\",filteredQuestions.length!==1?\"s\":\"\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"esc_button text-align-center\",variant:\"warning\",onClick:function onClick(){reset();switchEdit();},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{className:\"esc_button text-align-center\",variant:\"danger\",onClick:resetView,children:\"Exit\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"desc\",children:quiz.body}),filteredQuestions.map(function(q,index){return/*#__PURE__*/_jsx(QuizQuestion,{index:index,question:q,submitted:submitArr[index],handleSubmit:handleQuestionSubmit,addPoints:addPoints,editQuestionSub:editQuestionSub},quiz.id+\"|\"+q.id);}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer\",children:[/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:reset,children:\"Reset\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"score_report\",children:[p,\"/\",totalPoints]})]})]});};","map":{"version":3,"sources":["C:/Users/liubi/quizzer_start/src/quizzer/QuizExpanded.tsx"],"names":["React","useState","Button","QuizQuestion","QuizExpanded","quiz","editQuiz","resetView","switchEdit","filteredQuestions","questionList","filter","q","published","p","sp","Array","length","submitArr","setSubmitArr","handleQuestionSubmit","index","newSubmitArr","splice","totalPoints","reduce","prev","points","addPoints","prevCount","reset","id","map","submission","editQuestionSub","questionId","sub","question","title","body"],"mappings":"wXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,KAAuB,iBAAvB,CAIA,MAAO,oBAAP,CACA,OAASC,YAAT,KAA6B,gBAA7B,C,6IAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAStB,IARFC,CAAAA,IAQE,MARFA,IAQE,CAPFC,QAOE,MAPFA,QAOE,CANFC,SAME,MANFA,SAME,CALFC,UAKE,MALFA,UAKE,CACF,GAAMC,CAAAA,iBAAiB,CAAGJ,IAAI,CAACK,YAAL,CAAkBC,MAAlB,CACtB,SAACC,CAAD,QACKP,CAAAA,IAAI,CAACQ,SAAL,EAAkBD,CAAC,CAACC,SAArB,EAAmC,CAACR,IAAI,CAACQ,SAD7C,EADsB,CAA1B,CAKA,cAAgBZ,QAAQ,CAAS,CAAT,CAAxB,wCAAOa,CAAP,eAAUC,EAAV,eACA,eAAkCd,QAAQ,CACtC,GAAIe,CAAAA,KAAJ,CAAUP,iBAAiB,CAACQ,MAA5B,CADsC,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAmB,CAC5C,GAAMC,CAAAA,YAAY,oBAAOJ,SAAP,CAAlB,CACAI,YAAY,CAACC,MAAb,CAAoBF,KAApB,CAA2B,CAA3B,CAA8B,IAA9B,EACAF,YAAY,CAACG,YAAD,CAAZ,CACH,CAJD,CAMA,GAAME,CAAAA,WAAW,CAAGf,iBAAiB,CAACgB,MAAlB,CAChB,SAACC,IAAD,CAAed,CAAf,QAAuCc,CAAAA,IAAI,CAAGd,CAAC,CAACe,MAAhD,EADgB,CAEhB,CAFgB,CAApB,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACd,CAAD,CAAe,CAC7BC,EAAE,CAAC,SAACc,SAAD,QAAeA,CAAAA,SAAS,CAAGf,CAA3B,EAAD,CAAF,CACH,CAFD,CAIA,GAAMgB,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChBX,YAAY,CAAC,GAAIH,CAAAA,KAAJ,CAAUP,iBAAiB,CAACQ,MAA5B,CAAD,CAAZ,CACAX,QAAQ,CAACD,IAAI,CAAC0B,EAAN,gCACD1B,IADC,MAEJK,YAAY,CAAEL,IAAI,CAACK,YAAL,CAAkBsB,GAAlB,CACV,SAACpB,CAAD,wCAAiCA,CAAjC,MAAoCqB,UAAU,CAAE,EAAhD,IADU,CAFV,GAAR,CAOAlB,EAAE,CAAC,CAAD,CAAF,CACH,CAVD,CAYA,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,UAAD,CAAqBC,GAArB,CAAqC,CACzD9B,QAAQ,CAACD,IAAI,CAAC0B,EAAN,gCACD1B,IADC,MAEJK,YAAY,CAAEL,IAAI,CAACK,YAAL,CAAkBsB,GAAlB,CACV,SAACK,QAAD,QAAkCA,CAAAA,QAAQ,CAACN,EAAT,GAAgBI,UAAhB,gCAAiCE,QAAjC,MAA2CJ,UAAU,CAAEG,GAAvD,GAA8DC,QAAhG,EADU,CAFV,GAAR,CAMH,CAPD,CASA,mBACI,wCACI,aAAK,SAAS,CAAC,mDAAf,wBACI,aAAK,SAAS,CAAC,6BAAf,wBACI,WAAI,SAAS,CAAC,OAAd,UAAuBhC,IAAI,CAACiC,KAA5B,EADJ,cAEI,qBACK7B,iBAAiB,CAACQ,MADvB,aAEKR,iBAAiB,CAACQ,MAAlB,GAA6B,CAA7B,CAAiC,GAAjC,CAAuC,EAF5C,GAFJ,GADJ,cAQI,oCACI,KAAC,MAAD,EACI,SAAS,CAAC,8BADd,CAEI,OAAO,CAAC,SAFZ,CAGI,OAAO,CAAE,kBAAM,CACXa,KAAK,GACLtB,UAAU,GACb,CANL,kBADJ,cAWI,KAAC,MAAD,EACI,SAAS,CAAC,8BADd,CAEI,OAAO,CAAC,QAFZ,CAGI,OAAO,CAAED,SAHb,UAKK,MALL,EAXJ,GARJ,GADJ,cA6BI,UAAG,SAAS,CAAC,MAAb,UAAqBF,IAAI,CAACkC,IAA1B,EA7BJ,CA8BK9B,iBAAiB,CAACuB,GAAlB,CAAsB,SAACpB,CAAD,CAAcS,KAAd,qBACnB,KAAC,YAAD,EAEI,KAAK,CAAEA,KAFX,CAGI,QAAQ,CAAGT,CAHf,CAII,SAAS,CAAEM,SAAS,CAACG,KAAD,CAJxB,CAKI,YAAY,CAAED,oBALlB,CAMI,SAAS,CAAEQ,SANf,CAOI,eAAe,CAAEM,eAPrB,EACS7B,IAAI,CAAC0B,EAAL,CAAU,GAAV,CAAgBnB,CAAC,CAACmB,EAD3B,CADmB,EAAtB,CA9BL,cAyCI,aAzCJ,cA0CI,aAAK,SAAS,CAAC,QAAf,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,QAAhB,CAAyB,OAAO,CAAED,KAAlC,mBADJ,cAII,cAAM,SAAS,CAAC,cAAhB,WACKhB,CADL,KACSU,WADT,GAJJ,GA1CJ,GADJ,CAqDH,CA7GM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Question } from \"../interfaces/question\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\n\r\nimport \"./QuizExpanded.css\";\r\nimport { QuizQuestion } from \"./QuizQuestion\";\r\n\r\nexport const QuizExpanded = ({\r\n    quiz,\r\n    editQuiz,\r\n    resetView,\r\n    switchEdit\r\n}: {quiz: Quiz, \r\n    editQuiz: (id: number, quiz: Quiz) => void,\r\n    resetView: () => void, \r\n    switchEdit: () => void\r\n}) => {\r\n    const filteredQuestions = quiz.questionList.filter(\r\n        (q: Question): boolean =>\r\n            (quiz.published && q.published) || !quiz.published\r\n    );\r\n\r\n    const [p, sp] = useState<number>(0);\r\n    const [submitArr, setSubmitArr] = useState<boolean[]>(\r\n        new Array(filteredQuestions.length)\r\n    );\r\n\r\n    const handleQuestionSubmit = (index: number) => {\r\n        const newSubmitArr = [...submitArr];\r\n        newSubmitArr.splice(index, 3, true);\r\n        setSubmitArr(newSubmitArr);\r\n    };\r\n\r\n    const totalPoints = filteredQuestions.reduce(\r\n        (prev: number, q: Question): number => prev + q.points,\r\n        0\r\n    );\r\n\r\n    const addPoints = (p: number) => {\r\n        sp((prevCount) => prevCount + p);\r\n    };\r\n\r\n    const reset = () => {\r\n        setSubmitArr(new Array(filteredQuestions.length));\r\n        editQuiz(quiz.id, {\r\n            ...quiz,\r\n            questionList: quiz.questionList.map(\r\n                (q: Question): Question => ({ ...q, submission: \"\" })\r\n            )\r\n        });\r\n\r\n        sp(0);\r\n    };\r\n\r\n    const editQuestionSub = (questionId: number, sub: string) => {\r\n        editQuiz(quiz.id, {\r\n            ...quiz,\r\n            questionList: quiz.questionList.map(\r\n                (question: Question): Question => question.id === questionId ? {...question, submission: sub} : question\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div className=\"d-flex align-items-baseline\">\r\n                    <h1 className=\"title\">{quiz.title}</h1>\r\n                    <p>\r\n                        {filteredQuestions.length} question\r\n                        {filteredQuestions.length !== 1 ? \"s\" : \"\"}\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        className=\"esc_button text-align-center\"\r\n                        variant=\"warning\"\r\n                        onClick={() => {\r\n                            reset();\r\n                            switchEdit();\r\n                        }}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                        className=\"esc_button text-align-center\"\r\n                        variant=\"danger\"\r\n                        onClick={resetView}\r\n                    >\r\n                        {\"Exit\"}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <p className=\"desc\">{quiz.body}</p>\r\n            {filteredQuestions.map((q: Question, index: number) => (\r\n                <QuizQuestion\r\n                    key={quiz.id + \"|\" + q.id}\r\n                    index={index}\r\n                    question= {q}\r\n                    submitted={submitArr[index]}\r\n                    handleSubmit={handleQuestionSubmit}\r\n                    addPoints={addPoints}\r\n                    editQuestionSub={editQuestionSub}\r\n                ></QuizQuestion>\r\n            ))}\r\n            <hr />\r\n            <div className=\"footer\">\r\n                <Button variant=\"danger\" onClick={reset}>\r\n                    Reset\r\n                </Button>\r\n                <span className=\"score_report\">\r\n                    {p}/{totalPoints}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}