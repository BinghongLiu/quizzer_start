{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\Users\\\\liubi\\\\quizzer_start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import{QuestionEdit}from\"./QuestionEdit\";import\"./QuizEdit.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var QuizEdit=function QuizEdit(_ref){var quiz=_ref.quiz,editQuiz=_ref.editQuiz,deleteQuiz=_ref.deleteQuiz,switchEdit=_ref.switchEdit,resetView=_ref.resetView;var _useState=useState(_objectSpread({},quiz)),_useState2=_slicedToArray(_useState,2),newQuiz=_useState2[0],setNewQuiz=_useState2[1];var editQuestion=function editQuestion(questionId,newQuestion){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.map(function(questions){return questions.id===questionId?_objectSpread({},newQuestion):questions;})}));};var removeQuestion=function removeQuestion(questionId){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.filter(function(questions){return!(questions.id===questionId);})}));};var saveChanges=function saveChanges(){editQuiz(quiz.id,_objectSpread({},newQuiz));};var swapQuestion=function swapQuestion(idx1,idx2){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.map(function(q,idx){if(idx===idx1)return newQuiz.questionList[idx2];if(idx===idx2)return newQuiz.questionList[idx1];return q;})}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"edit_header\",children:/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formEditQuizId\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title_published_flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_title_area\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title: \"}),/*#__PURE__*/_jsx(Form.Control,{value:newQuiz.title,onChange:function onChange(e){return setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{title:e.target.value}));}})]}),/*#__PURE__*/_jsx(Form.Check,{className:\"published_check\",type:\"checkbox\",id:\"is-published_check\",label:\"Quiz Published\",\"data-testid\":\"Quiz Published\",checked:newQuiz.published,onChange:function onChange(e){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{published:e.target.checked}));}})]}),/*#__PURE__*/_jsx(Form.Label,{children:\"Description: \"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,value:newQuiz.body,onChange:function onChange(e){return setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{body:e.target.value}));}})]})}),/*#__PURE__*/_jsx(\"div\",{children:newQuiz.questionList.map(function(q,index){return/*#__PURE__*/_jsx(QuestionEdit,{index:index,lastIndex:newQuiz.questionList.length-1,question:q,editQuestion:editQuestion,removeQuestion:removeQuestion,swapQuestion:swapQuestion},newQuiz.id+\"|\"+q.id);})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"add_question_button\",onClick:function onClick(){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:[].concat(_toConsumableArray(newQuiz.questionList),[{id:newQuiz.questionList.length,body:\"Example Question\",type:\"short_answer_question\",options:[],submission:\"\",expected:\"Example Answer\",points:1,published:false}])}));},children:\"Add Question\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_footer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"save_edit_btn\",onClick:function onClick(){saveChanges();switchEdit();},children:\"Save\"}),/*#__PURE__*/_jsx(Button,{variant:\"warning\",onClick:switchEdit,children:\"Cancel\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:function onClick(){deleteQuiz(quiz.id);resetView();},children:\"Delete Quiz\"})]})]})]});};","map":{"version":3,"sources":["C:/Users/liubi/quizzer_start/src/quizzer/QuizEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","QuizEdit","quiz","editQuiz","deleteQuiz","switchEdit","resetView","newQuiz","setNewQuiz","editQuestion","questionId","newQuestion","questionList","map","questions","id","removeQuestion","filter","saveChanges","swapQuestion","idx1","idx2","q","idx","title","e","target","value","published","checked","body","index","length","type","options","submission","expected","points"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Question } from \"../interfaces/question\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { QuestionEdit } from \"./QuestionEdit\";\r\n\r\nimport \"./QuizEdit.css\";\r\n\r\nexport const QuizEdit = ({\r\n    quiz,\r\n    editQuiz,\r\n    deleteQuiz,\r\n    switchEdit,\r\n    resetView\r\n}: {quiz: Quiz, \r\n    editQuiz: (id: number, newQuiz: Quiz) => void, \r\n    deleteQuiz: (id: number) => void, switchEdit: () => void, \r\n    resetView: () => void}) => {\r\n    const [newQuiz, setNewQuiz] = useState<Quiz>({ ...quiz });\r\n\r\n    const editQuestion = (questionId: number, newQuestion: Question) => {\r\n        setNewQuiz({\r\n            ...newQuiz,\r\n            questionList: newQuiz.questionList.map(\r\n                (questions: Question): Question => questions.id === questionId ? {...newQuestion} : questions\r\n            )\r\n        });\r\n    };\r\n\r\n    const removeQuestion = (questionId: number) => {\r\n        setNewQuiz({\r\n            ...newQuiz,\r\n            questionList: newQuiz.questionList.filter(\r\n                (questions: Question): boolean => !(questions.id === questionId)\r\n            )\r\n        });\r\n    };\r\n\r\n    const saveChanges = () => {\r\n        editQuiz(quiz.id, { ...newQuiz });\r\n    };\r\n\r\n    const swapQuestion = (idx1: number, idx2: number) => {\r\n        setNewQuiz({\r\n            ...newQuiz,\r\n            questionList: newQuiz.questionList.map(\r\n                (q: Question, idx: number): Question => {\r\n                    if (idx === idx1) return newQuiz.questionList[idx2];\r\n                    if (idx === idx2) return newQuiz.questionList[idx1];\r\n                    return q;\r\n                }\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"edit_header\">\r\n                <Form.Group controlId=\"formEditQuizId\">\r\n                    <div className=\"title_published_flex\">\r\n                        <div className=\"edit_title_area\">\r\n                            <Form.Label>Title: </Form.Label>\r\n                            <Form.Control\r\n                                value={newQuiz.title}\r\n                                onChange={(\r\n                                    e: React.ChangeEvent<HTMLInputElement>\r\n                                ) =>\r\n                                    setNewQuiz({\r\n                                        ...newQuiz,\r\n                                        title: e.target.value\r\n                                    })\r\n                                }\r\n                            ></Form.Control>\r\n                        </div>\r\n                        <Form.Check\r\n                            className=\"published_check\"\r\n                            type=\"checkbox\"\r\n                            id=\"is-published_check\"\r\n                            label=\"Quiz Published\"\r\n                            data-testid=\"Quiz Published\"\r\n                            checked={newQuiz.published}\r\n                            onChange={(\r\n                                e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                                setNewQuiz({\r\n                                    ...newQuiz,\r\n                                    published: e.target.checked\r\n                                });\r\n                            }}\r\n                        ></Form.Check>\r\n                    </div>\r\n                    <Form.Label>Description: </Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        value={newQuiz.body}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                            setNewQuiz({ ...newQuiz, body: e.target.value })\r\n                        }\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n            </div>\r\n\r\n            <div>\r\n                {newQuiz.questionList.map((q: Question, index: number) => (\r\n                    <QuestionEdit\r\n                        key={newQuiz.id + \"|\" + q.id}\r\n                        index={index}\r\n                        lastIndex={newQuiz.questionList.length - 1}\r\n                        question={q}\r\n                        editQuestion={editQuestion}\r\n                        removeQuestion={removeQuestion}\r\n                        swapQuestion={swapQuestion}\r\n                    ></QuestionEdit>\r\n                ))}\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <Button\r\n                    className=\"add_question_button\"\r\n                    onClick={() => {\r\n                        setNewQuiz({\r\n                            ...newQuiz,\r\n                            questionList: [\r\n                                ...newQuiz.questionList,\r\n                                {\r\n                                    id: newQuiz.questionList.length,\r\n                                    body: \"Example Question\",\r\n                                    type: \"short_answer_question\",\r\n                                    options: [],\r\n                                    submission: \"\",\r\n                                    expected: \"Example Answer\",\r\n                                    points: 1,\r\n                                    published: false\r\n                                }\r\n                            ]\r\n                        });\r\n                    }}\r\n                >\r\n                    Add Question\r\n                </Button>\r\n                <div className=\"edit_footer\">\r\n                    <div>\r\n                        <Button\r\n                            variant=\"success\"\r\n                            className=\"save_edit_btn\"\r\n                            onClick={() => {\r\n                                saveChanges();\r\n                                switchEdit();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"warning\" onClick={switchEdit}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                            deleteQuiz(quiz.id);\r\n                            resetView();\r\n                        }}\r\n                    >\r\n                        Delete Quiz\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}